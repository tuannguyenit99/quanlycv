{"version":3,"sources":["Aquanlycongviec/Taskform.js","Aquanlycongviec/Search.js","Aquanlycongviec/Control.js","Aquanlycongviec/Item.js","Aquanlycongviec/Table.js","Aquanlycongviec/quanlycv.js","reportWebVitals.js","index.js"],"names":["Taskform","props","Close","Add","event","target","name","value","setState","onSubmit","preventDefault","Chuyen","state","id","status","this","taskEd","nextProps","className","onClick","type","onChange","Component","Search","TK","keyword","placeholder","Control","Item","Onstatus","task","Delete","Edit","index","window","confirm","Table","Onchange","Filter","filterName","fifterStatus","tasks","elemet","map","Quanlycv","HT","DisplayForm","Open","console","log","lay","push","localStorage","setItem","JSON","stringify","findid","data","kq","forEach","splice","filterStatus","filter","toLowerCase","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","Dislay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b9adf02.chunk.js","sourcesContent":["\r\nimport { Component } from \"react\";\r\n\r\n\r\nclass Taskform extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id : '',\r\n            name : '',\r\n            status : true \r\n        }\r\n        \r\n    }\r\n    componentDidMount() {\r\n        if(this.props.taskEd){\r\n            this.setState ({\r\n                id : this.props.taskEd.id,\r\n                name : this.props.taskEd.name,\r\n                status : this.props.taskEd.status,\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        \r\n        if ( nextProps&& nextProps.taskEd) {\r\n            this.setState({\r\n                id: nextProps.taskEd.id,\r\n                name: nextProps.taskEd.name,\r\n                status: nextProps.taskEd.status,\r\n            });\r\n        } else if (nextProps.taskEd) {\r\n            this.setState({\r\n                id: \"\",\r\n                name: \"\",\r\n                status: false,\r\n            });\r\n        }\r\n    }\r\n    \r\n   \r\n   \r\n    \r\n  \r\n\r\n    \r\n  \r\n  \r\n\r\n    \r\n\r\n   \r\n       \r\n\r\n\r\n\r\n\r\n    \r\n   \r\n\r\n     \r\n    \r\n\r\n\r\n\r\n    \r\n  \r\n\r\n\r\n    \r\n\r\n    \r\n    \r\n\r\n    Close =() => {\r\n        this.props.Close();\r\n    }\r\n  Add = (event) =>{\r\n      var target = event.target;\r\n      var name = target.name;\r\n      var value =target.value ;\r\n      if(target.name==='status')\r\n      {\r\n          value = target.value==='true' ? true: false ;\r\n      }\r\n      \r\n      this.setState ({\r\n          [name] : value\r\n      })\r\n      \r\n  }\r\n  onSubmit = (event)  => {\r\n      event.preventDefault();\r\n      this.props.Chuyen(this.state);\r\n      this.setState ({\r\n        \r\n            id :'',\r\n            name : '',\r\n            status : true \r\n      })\r\n    }\r\n\r\n  \r\n\r\n\r\n\r\n    render()\r\n    {\r\n        var  {id} =this.state;\r\n        return (\r\n            \r\n            \r\n            <div className=\"panel panel-warning\">\r\n                              <div className=\"panel-heading\">\r\n                                    <div className=\"panel-title\">\r\n                                        {id !==''? 'Sửa Công Việc': 'Thêm Công Việc' }\r\n                                       \r\n                                        <div className=\"haha\" onClick={this.Close}> \r\n                                                Exit\r\n                                        </div>\r\n                                    </div>\r\n                              </div>\r\n                              <div className=\"panel-body\">\r\n                                    <form  onSubmit={this.onSubmit} >\r\n                                       \r\n                                        <div className=\"form-group\">\r\n                                            <label >Tên</label>\r\n                                            <input type=\"text\" \r\n                                            className=\"form-control\"\r\n                                            name=\"name\" \r\n                                            value={this.state.name}\r\n                                            onChange={this.Add} \r\n                                            \r\n                                             />\r\n                                        </div>\r\n                                     <label>Trạng Thái</label>\r\n                                     \r\n                                     <select  className=\"form-control\"\r\n                                      name=\"status\"\r\n                                      value={this.state.status}\r\n                                      onChange={this.Add} \r\n\r\n                                      >\r\n                                         <option value={true}>Kích Hoạt</option>\r\n                                         <option value={false}>Ẩn</option>\r\n                                     </select>\r\n                                     <br/>\r\n                                    \r\n                                        <button type=\"submit\" className=\"btn btn-primary\">Lưu Lại</button>\r\n                                        &emsp;\r\n                                        <button type=\"reset\" className=\"btn btn-danger\">Hủy Bỏ</button>\r\n                                    </form>\r\n                                    \r\n                              </div>\r\n                        </div>\r\n            \r\n        )\r\n       \r\n    }\r\n}\r\n\r\nexport  default Taskform;","\r\nimport { Component } from \"react\";\r\nimport \"../TCss/search.css\" ;\r\nclass Search extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            keyword : ''\r\n        }\r\n    }\r\n    \r\n    \r\n Search = (event) => {\r\n     var target = event.target;\r\n     var name = target.name;\r\n     var value =target.value;\r\n     this.setState ({\r\n         [name] : value\r\n     })\r\n     \r\n }\r\n TK = () => {\r\n     this.props.TK(this.state.keyword);\r\n }\r\n\r\n    render()\r\n    {\r\n        var {keyword} =this.state;\r\n        return (\r\n           \r\n              \r\n                        <div className=\"row\">\r\n                            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n\r\n                                \r\n                                <input name=\"keyword\"\r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                placeholder=\"Nhập từ khóa\"\r\n                                \r\n                                value={keyword}\r\n                                onChange={this.Search}\r\n                                \r\n                                \r\n                                \r\n                                /> \r\n                               \r\n\r\n                                    \r\n                            </div>\r\n                            <div className=\"col-xs-2 col-sm-2 col-md-2 col-lg-2\">\r\n                                \r\n                                <button type=\"button\" \r\n                                className=\"btn btn-default\"\r\n                                onClick={this.TK}\r\n                                \r\n                                \r\n                                >\r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    Tìm</button>\r\n                                \r\n                            </div>\r\n                              \r\n                            \r\n                            </div>\r\n                        \r\n                        \r\n                               \r\n\r\n                            \r\n            \r\n        )\r\n       \r\n    }\r\n}\r\n\r\nexport  default Search;","\r\nimport { Component } from \"react\";\r\nimport Search from \"./Search\";\r\n\r\nclass Control extends Component{\r\n    render()\r\n    {\r\n        return (\r\n            \r\n              \r\n                      <Search TK={this.props.TK}/>    \r\n                        \r\n                               \r\n\r\n                            \r\n            \r\n        )\r\n       \r\n    }\r\n}\r\n\r\nexport  default Control;","\r\nimport { Component } from \"react\";\r\n\r\n\r\nclass Item extends Component{\r\n    Onstatus =() => {\r\n       this.props.Onstatus(this.props.task.id)\r\n    }\r\n\r\n    Delete =() => {\r\n        this.props.Delete(this.props.task.id);\r\n    }\r\n    Edit =() => {\r\n        this.props.Edit(this.props.task.id);\r\n    }\r\n    render()\r\n    {\r\n        var {task,index} =this.props;\r\n        return (\r\n            \r\n            <tr>\r\n                                       <td>{index+1}</td>\r\n                                       <td>{task.name}</td>\r\n                                       <td className=\"text-center\">\r\n                                           <span className={task.status===true?\r\n                                             'label label-danger': 'label label-success'}\r\n        \r\n                                             onClick={this.Onstatus}\r\n                                              >\r\n                                                   \r\n                                               {task.status===true ? 'Kích hoạt': 'Ẩn' }\r\n                                               </span>\r\n                                       </td>\r\n                                       <td>\r\n                                        \r\n                                        <button type=\"button\" className=\"btn btn-danger\"\r\n                                        \r\n                                        onClick={this.Edit}\r\n                                        \r\n                                        >Sửa</button>\r\n                                        \r\n                                        &nbsp;\r\n                                        \r\n                                        <button type=\"button\" className=\"btn btn-warning\"\r\n                                        \r\n                                        onClick={() => {if (window.confirm('Are you delete!'))  this.Delete() }}\r\n                                        \r\n                                        >Xóa</button>\r\n                                        \r\n\r\n                                       </td>\r\n\r\n\r\n\r\n                                    </tr>\r\n            \r\n        )\r\n       \r\n    }\r\n}\r\n\r\nexport  default Item;","\r\nimport { Component } from \"react\";\r\nimport Item from \"./Item\";\r\n\r\n\r\n\r\nclass Table extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state={\r\n            filterName : '',\r\n            fifterStatus : -1 ,\r\n\r\n\r\n        }\r\n        \r\n    }\r\nOnchange =(event) => {\r\n   var target= event.target;\r\n   var name = target.name;\r\n   var value = target.value;\r\n   this.props.Filter( \r\n       name==='filterName'? value : this.state.filterName ,\r\n       name==='fifterStatus'? value : this.state.fifterStatus ,\r\n\r\n     )\r\n   this.setState ({\r\n       [name] : value \r\n   });\r\n\r\n}\r\n\r\n\r\n    render()\r\n    {\r\n        var {tasks} =this.props;\r\n        var {filterName,fifterStatus} =this.state;\r\n\r\n     let elemet = tasks.map((task,index) => {\r\n         return   <Item key={task.id} index={index} task={task} \r\n           \r\n            Onstatus={this.props.Onstatus}\r\n\r\n            Delete={this.props.Delete}\r\n\r\n             Edit ={this.props.Edit}\r\n         />\r\n        \r\n     })\r\n        return (\r\n            \r\n            <table className=\"table table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>STT</th>\r\n                                        <th>Tên</th>\r\n                                        <th>Trạng Thái</th>\r\n                                        <th>Hoạt Động</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>\r\n\r\n                                            <input \r\n                                            type=\"text\"\r\n                                            className=\"form-control\" \r\n                                            name=\"filterName\"\r\n                                            value={filterName}\r\n                                            onChange={ this.Onchange }\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                        <select  className=\"form-control\" name=\"fifterStatus\"\r\n                                        \r\n                                        value={fifterStatus}\r\n                                        onChange={ this.Onchange }\r\n                                        \r\n                                        >\r\n                                         <option value={-1}>Tất Cả</option>\r\n                                         <option value={1}>Hoạt Động</option>\r\n                                         <option value={0}>Ẩn</option>\r\n                                     </select>\r\n                                        </td>\r\n                                        <td>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                    {elemet}    \r\n                                    \r\n                                </tbody>\r\n                            </table>\r\n            \r\n        )\r\n       \r\n    }\r\n}\r\n\r\nexport  default Table;","import \"../TCss/quanlycv.css\";\r\nimport { Component } from \"react\";\r\nimport Taskform from \"./Taskform\";\r\nimport Control from \"./Control\";\r\nimport Table from \"./Table\";\r\n// import demo from \"../trainning/demo.js\";\r\nclass Quanlycv extends Component{\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state={\r\n        tasks : [],\r\n        DisplayForm : false ,\r\n        taskEd : null,\r\n        filter  : {\r\n           name : '',\r\n           status : -1,\r\n\r\n        },\r\n       keyword : '',\r\n        \r\n    }\r\n    \r\n}\r\n\r\ncomponentDidMount()\r\n{\r\n    if(localStorage && localStorage.getItem('tasks')){\r\n        var tasks= JSON.parse(localStorage.getItem('tasks'));\r\n        this.setState ({\r\n            tasks : tasks\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\n  \r\n\r\n\r\n// Demo =() => {\r\n//       var tasks =[\r\n//           {\r\n//               id : this.lay(),\r\n//               name: 'Học lập trình 1',\r\n//               status : true    \r\n\r\n//           },\r\n//           {\r\n//             id : this.lay(),\r\n//             name: 'Học lập trình 2',\r\n//             status : true    \r\n\r\n//         },\r\n//         {\r\n//             id : this.lay(),\r\n//             name: 'Học lập trình 3',\r\n//             status : false    \r\n\r\n//         },\r\n\r\n//       ]\r\n\r\n\r\n//   this.setState ({\r\n//       tasks : tasks\r\n//   })\r\n//   localStorage.setItem('tasks',JSON.stringify(tasks));\r\n\r\n// }\r\n s4(){\r\n     return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);\r\n }\r\n lay(){\r\n     return this.s4() +this.s4()+this.s4()+this.s4()+this.s4()+this.s4();\r\n }\r\n HT =() =>{\r\n     this.setState ({\r\n         DisplayForm : !this.state.DisplayForm,\r\n         taskEd :null,\r\n     })\r\n }\r\n \r\n Close= () => {\r\n    this.setState (\r\n        {\r\n            DisplayForm : false,\r\n            taskEd :null,\r\n        }\r\n    )\r\n }\r\n\r\n Open= () => {\r\n    this.setState (\r\n        {\r\n            DisplayForm : true\r\n        }\r\n    )\r\n }\r\n taskEd= () => {\r\n    this.setState (\r\n        {\r\n            taskEd : null\r\n        }\r\n    )\r\n }\r\n\r\n Chuyen =(event)  => {\r\n     var {tasks} =this.state;\r\n     console.log(event);\r\n     if(event.id===\"\")\r\n     {\r\n\r\n        console.log(\"xtttt\");\r\n        event.id =this.lay();\r\n        tasks.push(event);\r\n        this.Close();\r\n\r\n           //Luu lại\r\n        this.setState ({\r\n           \r\n            tasks: tasks\r\n          \r\n       });\r\n       localStorage.setItem('tasks', JSON.stringify(tasks));\r\n     }\r\n     else {\r\n        console.log(\"xx\");\r\n\r\n    \r\n\r\n\r\n        var index = this.findid(event.id);\r\n        tasks[index]= event;\r\n        this.Close();\r\n\r\n\r\n        //Luu lại\r\n        this.setState ({\r\n           \r\n            tasks: tasks\r\n          \r\n       });\r\n       localStorage.setItem('tasks', JSON.stringify(tasks));\r\n     }\r\n      \r\n }\r\n Onstatus =(data) => {\r\n    var {tasks} =this.state;\r\n    var index = this.findid(data);\r\n     if(index !==-1){\r\n            tasks[index].status =! tasks[index].status;\r\n            this.setState ({\r\n                tasks : tasks\r\n            })\r\n            localStorage.setItem('tasks',JSON.stringify(tasks));\r\n     }\r\n    \r\n }\r\n\r\n findid =(id) => {\r\n    var kq= -1;\r\n    var {tasks} =this.state;\r\n    tasks.forEach((task,index) => {\r\n        if(task.id === id)\r\n        {\r\n            kq=index;\r\n        }\r\n    })\r\n    return kq;\r\n }\r\n Delete =(id) =>{\r\n     var {tasks} =this.state;\r\n     var index = this.findid(id);\r\n     if(index !==-1){\r\n       tasks.splice(index,1);\r\n       this.setState ({\r\n           tasks :tasks\r\n       })\r\n     }\r\n     localStorage.setItem('tasks', JSON.stringify(tasks));\r\n     this.Close();\r\n }\r\nEdit = (id) => {\r\n   \r\n    this.Open();\r\n    var {tasks} = this.state;\r\n    var index = this.findid(id);\r\n    var taskEd = tasks[index];\r\n    this.setState ({\r\n        taskEd: taskEd\r\n        \r\n    })\r\n   \r\n\r\n}\r\n\r\nFilter = (filterName,filterStatus) => {\r\n\r\n    filterStatus =+ filterStatus;\r\n\r\n   this.setState ({\r\n       filter : {\r\n           name : filterName.toLowerCase(),\r\n           status: filterStatus,\r\n       }\r\n   })\r\n\r\n}\r\n\r\n\r\nTK =(keyword) => {\r\n    this.setState ({\r\n        keyword:keyword\r\n    })\r\n}\r\n    render()\r\n    {\r\n       \r\n        var {tasks, DisplayForm,taskEd,filter,keyword } =this.state;\r\n        \r\n       if(filter)\r\n       {\r\n          if(filter.name){\r\n              tasks =tasks.filter((task) => {\r\n                 return task.name.toLowerCase().indexOf(filter.name) !== -1;\r\n              })\r\n\r\n              }\r\n\r\n              tasks =tasks.filter((task) => {\r\n                  if(filter.status===-1)\r\n                  {\r\n                      return task;\r\n                  }\r\n                  else\r\n                  {\r\n                      return task.status===(filter.status===1? true :false)\r\n                  }\r\n              })\r\n              if(keyword)\r\n              {\r\n                tasks =tasks.filter((task) => {\r\n                    return task.name.toLowerCase().indexOf(keyword) !== -1;\r\n                 })\r\n              }\r\n          \r\n       }\r\n\r\n\r\n        let Dislay = DisplayForm ? <Taskform\r\n         Close={this.Close} \r\n         Chuyen={this.Chuyen}\r\n         taskEd={taskEd}\r\n        /> : '';\r\n        return (\r\n            \r\n            <div className=\"container\">\r\n                <br/>\r\n                <h1>Quản Lý Công Việc</h1>\r\n                <hr/>\r\n                \r\n                <div className=\"row\">\r\n                    <div className={DisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\r\n                        \r\n                       \r\n                        {Dislay}\r\n                        \r\n                        \r\n                        \r\n                    </div>\r\n\r\n                    <div className={DisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\r\n                        \r\n                        <button type=\"button\" className=\"btn btn-success\" onClick={this.HT}>Thêm Công Việc</button> \r\n                        &nbsp;\r\n                        {/* <button type=\"button\" className=\"btn btn-warning\" onClick={this.Demo} >Demo</button> */}\r\n                        \r\n                        \r\n\r\n                    <br/>\r\n                    <br/>\r\n                        <Control  TK={this.TK}/>\r\n                         \r\n                        <br/>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                            \r\n                            <Table tasks={tasks} \r\n                            Onstatus={this.Onstatus}\r\n                            Delete={this.Delete}\r\n                            Edit={this.Edit}\r\n                            Filter={this.Filter}\r\n                            />\r\n                            \r\n                            \r\n                        </div>\r\n\r\n                        \r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            \r\n                \r\n            </div>\r\n            \r\n        )\r\n       \r\n    }\r\n}\r\n\r\nexport  default Quanlycv;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import Demo   from './App';\n// import Color from './component/color'\nimport Quanlycv  from './Aquanlycongviec/quanlycv';\n// import Form from './component/form';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n{/* <Demo /> */}\n  <Quanlycv />\n\n  </React.StrictMode>,\n  document.getElementById('sell')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}